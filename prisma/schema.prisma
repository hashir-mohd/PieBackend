generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  videos       Video[]
  interactions Interaction[]

  @@map("users")
}

model Video {
  id          String   @id @default(cuid())
  title       String
  description String?
  videoUrl    String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  metaItems    MetaItem[]
  interactions Interaction[]

  @@map("videos")
}

model MetaItem {
  id           String   @id @default(cuid())
  videoId      String
  type         String
  value        String
  thumbnailUrl String?
  label        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  video Video @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@map("meta_items")
}

model Interaction {
  id        String   @id @default(cuid())
  userId    String
  videoId   String
  type      String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  video Video @relation(fields: [videoId], references: [id], onDelete: Cascade)

  // Prevent duplicate likes/views from same user
  @@unique([userId, videoId, type], name: "unique_user_video_interaction")
  @@map("interactions")
}
